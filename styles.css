body {
    background-color:antiquewhite;
}


h1 {
    text-align: center;
    font-size: 60px;
    margin: 10px auto;
}

h3 {
    font-size: 30px;
    margin: 0px;
    padding: 0px;
}

button,
input {
    background-color: lightblue;
    font-size: 20px;
    /* font-family:'Times New Roman', Times, serif; */
    color: black;
    text-align: center;
    box-shadow: 2px 2px 2px rgb(81, 81, 81);
    padding: 6px;

    border-radius: 5px;
    border-width: 2px;
    border-color: black;

    cursor: pointer;
}

/* .contentContainer { */
    /* width: 650px; */
    /* display: flex;
    margin-left: auto;
    margin-right: auto;
    border-color: red;
    border-style: solid; */

    /* align-self: center; */
    
/* } */


.contentContainer {
    /* width: 706px; */
    /* 706 since pixelGrid has a
       border of 3px (3+3=6) */
    /* border-style:solid;
    border-color: green;
    border-width: 3px; */

    /* margin: 0px;
    margin: auto; */
    margin: 0px 100px;

    display: flex;
    justify-content: center;
}

/* .buttonContainer {
    display: flex;
    flex: 1;
    justify-content:space-evenly;
    align-items: center;
    margin: 10px 0px;
} */

.buttonContainer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-evenly;

    /* border-radius: 8px; */
    border-width: 3px;
    border-color: rgb(65, 56, 56);
    border-style: outset;

    padding: 3px 6px;

    box-shadow: 4px 4px 6px rgb(81, 81, 81);
    background-color: bisque;




}

.pixelGrid {
    border-style:solid;
    border-color:black;
    border-width: 3px;
    width: 700px;
    height: 700px;

    background-color: white;

    /* Didnt use border-box since
       I wanted a distinct size.
       Make sure to adjust content
       container by same amount if
       adjusting width and height
       here. Same for border width
       changes.  */

    display: flex;
    flex-wrap: wrap;
    gap: 0px 0px;

    margin-left: 50px;
    margin-right: 50px;

    flex: 0 0 auto;
    min-width: 0px;

    box-shadow: 6px 6px 8px rgb(81, 81, 81);

    -webkit-user-drag: none; /* For Safari/Chrome */
    -moz-user-select: none; /* For Firefox */
    -ms-user-select: none; /* For IE/Edge */
    user-select: none; /* For modern browsers */


}

.pixel {
    box-sizing: border-box;
    /* important for pixels to prevent overflow*/
    width: 70px; 
    height: 70px;
    /* modify width and height in js */
    margin: 0px;
    padding: 0px;

    border-style:solid;
    border-color:rgb(44, 44, 44);
    border-width: 1px;
    background-color: white;


    -webkit-user-drag: none; /* For Safari/Chrome */
    -moz-user-select: none; /* For Firefox */
    -ms-user-select: none; /* For IE/Edge */
    user-select: none; /* For modern browsers */

    /* opacity: 1; */
}

.buttonDown {
    background-color: rgb(241, 77, 101);
    /* width: inherit;
    height: inherit; */

    /* border-style: inset; */
    box-shadow: 0px 0px 4px rgb(64, 48, 45) inset;
    font-size: 19px;
    padding: 7px 9px;
    text-align: center;
    
}


.gridSizeInfo {
    margin: 0px;
    padding: 0px;
    position: relative;
    top: 18px;
    font-size: 24px;
    font-weight: bold;
}


.opacityInfo {
    margin: 0px;
    padding: 0px;
    position: relative;
    bottom: 10px;
    font-size: 14px;
}


/* playing with button settings */

#chooseColor {
    height: 60px;
    width: 60px;
    padding: 5px;

    /* border-inline: 2px solid black; */
    /* border-radius: 10px; */
}

input[type=number]::placeholder {
    /* opacity: 1; */
    color: black;
}

input[type=number]:focus::placeholder {
    /* opacity: 1; */
    /* color: darkgray; */
    opacity: 0.5;
}


#chooseOpacity {
    /* padding-left: 20px; */
    /* opacity: 1; */
    padding: 6px 0px 6px 10px;
}


/* slider */


#newGridButton {
    /* box-shadow: 0px 0px 0px; */
    background: lightblue;
}

